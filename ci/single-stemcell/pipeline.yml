groups:
- name: ((release_branch))
  jobs:
  - bats
  - build-vcloud-esxi
  - build-vsphere-esxi
  - build-openstack-kvm
  - build-google-kvm
  - build-azure-hyperv
  - build-aws-xen-hvm
  - build-warden-boshlite
  - test-stemcells
  - build-stemcell
  - test-unit
  - publish-stemcells

- name: os-images
  jobs:
  - build-os-image
  - start-job

- name: all
  jobs:
  - bats
  - build-vcloud-esxi
  - build-vsphere-esxi
  - build-openstack-kvm
  - build-google-kvm
  - build-azure-hyperv
  - build-aws-xen-hvm
  - build-warden-boshlite
  - test-stemcells
  - build-stemcell
  - test-unit
  - publish-stemcells
  - build-os-image
  - start-job

shared:
  - &deploy-director
    task: deploy-director
    tags: [vsphere-v5.1]
    file: bosh-linux-stemcell-builder/ci/bats/tasks/deploy-director.yml
    params:
      BAT_INFRASTRUCTURE: vsphere
      BOSH_CLIENT:                          ((stemcell-test-director-username))
      BOSH_CLIENT_SECRET:                   ((stemcell-test-director-password))
      BOSH_VSPHERE_VCENTER:                 ((vcenter-ip))
      BOSH_VSPHERE_VCENTER_USER:            ((vcenter-user))
      BOSH_VSPHERE_VCENTER_PASSWORD:        ((vcenter-password))
      BOSH_VSPHERE_VERSION:                 ((vsphere-version))
      BOSH_VSPHERE_VCENTER_DC:              ((vcenter-dc))
      BOSH_VSPHERE_VCENTER_CLUSTER:         ((vcenter-cluster))
      BOSH_VSPHERE_VCENTER_DATASTORE:       ((vcenter-datastore))
      BOSH_VSPHERE_VCENTER_VLAN:            ((vcenter-vlan))
      BOSH_VSPHERE_VCENTER_VM_FOLDER:       ((vcenter-vm-folder))
      BOSH_VSPHERE_VCENTER_TEMPLATE_FOLDER: ((vcenter-template-folder))
      BOSH_VSPHERE_VCENTER_DISK_PATH:       ((vcenter-disk-path))

  - &prepare-bats-config
    task: prepare-bats
    tags: [vsphere-v5.1]
    file: bosh-linux-stemcell-builder/ci/bats/iaas/vsphere/prepare-bats-config.yml

  - &run-bats
    task: run-bats
    tags: [vsphere-v5.1]
    file: bats/ci/tasks/run-bats.yml

  - &teardown
    task: teardown
    tags: [vsphere-v5.1]
    file: bosh-linux-stemcell-builder/ci/bats/tasks/destroy-director.yml

jobs:
  - name: start-job
    serial: true
    plan:
      - get: bosh-linux-stemcell-builder

  - name: build-os-image
    plan:
      - get: bosh-linux-stemcell-builder
        trigger: true
        passed:
          - start-job
      - task: build
        file: bosh-linux-stemcell-builder/ci/os-images/tasks/build.yml
        privileged: true
        params:
          OPERATING_SYSTEM_NAME:      ((stemcell_os))
          OPERATING_SYSTEM_VERSION:   ((stemcell_os_version))
      - put: os-image-tarball
        params:
          file: os-image/((stemcell_os))-((stemcell_os_version)).tgz
          acl: public-read

  - name: test-unit
    serial: true
    plan:
      - get: bosh-linux-stemcell-builder
        trigger: true
      - task: test-unit
        file: bosh-linux-stemcell-builder/ci/tasks/test-unit.yml

  - name: build-stemcell
    serial: true
    plan:
      - get: bosh-linux-stemcell-builder
        trigger: true
        passed:
          - test-unit
      - get: version
        params:
          bump: minor
      - put: version
        params:
          file: version/number

  - name: test-stemcells
    serial: true
    plan:
      - do:
        - aggregate:
          - get: version
            trigger: true
            passed:
              - build-warden-boshlite
              - build-aws-xen-hvm
              - build-azure-hyperv
              - build-google-kvm
              - build-openstack-kvm
              - build-vsphere-esxi
              - build-vcloud-esxi
          - get: bosh-linux-stemcell-builder
          - get: bosh-deployment
          - get: bosh-cli
          - get: syslog-release
          - get: os-conf-release
          - get: vsphere-esxi
            passed: [build-vsphere-esxi]
            tags:
            - vsphere-v5.1
        - put: environment
          params:
            acquire: true

        - do:
          - task: deploy-director
            tags: [vsphere-v5.1]
            file: bosh-linux-stemcell-builder/ci/tasks/deploy-director.yml
            input_mapping:
              stemcell: vsphere-esxi
            params:
              BOSH_internal_ip:         ((stemcell-test-director-address))
              BOSH_internal_cidr:       ((bosh-director-vcenter-cidr))
              BOSH_internal_gw:         ((bosh-director-vcenter-gateway))
              BOSH_vcenter_ip:          ((vcenter-ip))
              BOSH_vcenter_user:        ((vcenter-user))
              BOSH_vcenter_password:    ((vcenter-password))
              BOSH_vcenter_dc:          ((vcenter-dc))
              BOSH_vcenter_cluster:     ((vcenter-cluster))
              BOSH_vcenter_ds:          ((vcenter-datastore))
              BOSH_network_name:        ((vcenter-vlan))
              BOSH_vcenter_vms:         ((vcenter-vm-folder))
              BOSH_vcenter_templates:   ((vcenter-template-folder))
              BOSH_vcenter_disks:       ((vcenter-disk-path))

          - task: test-stemcell
            tags: [vsphere-v5.1]
            file: bosh-linux-stemcell-builder/ci/tasks/test-stemcell.yml
            input_mapping:
              stemcell: vsphere-esxi
            params:
              BOSH_os_name: ((stemcell_os))-((stemcell_os_version))
              package: ipv4director
          ensure:
            task: teardown
            tags: [vsphere-v5.1]
            file: bosh-linux-stemcell-builder/ci/tasks/teardown.yml
        ensure:
          put: environment
          params:
            release: environment

  - name: publish-stemcells
    serial: true
    plan:
      - aggregate:
        - get: version
          passed:
            - test-stemcells
            - bats
        - get: bosh-linux-stemcell-builder
          passed:
            - bats
        - get: stemcells-index
      - task: assert-version-aligns
        file: bosh-linux-stemcell-builder/ci/tasks/assert-version-aligns.yml
        params:
          VERSION_PREFIX: ((stemcell_version_prefix))
      - task: copy-artifacts
        file: bosh-linux-stemcell-builder/ci/tasks/publish.yml
        params:
          VERSION_PREFIX: ((stemcell_version_prefix))
          AWS_ACCESS_KEY_ID: ((stemcell_aws_access_key))
          AWS_SECRET_ACCESS_KEY: ((stemcell_aws_secret_key))
          CANDIDATE_BUCKET_NAME: ((candidate_stemcell_bucket))
          PUBLISHED_BUCKET_NAME: ((published_stemcell_bucket))
          OS_NAME: ((stemcell_os))
          OS_VERSION: ((stemcell_os_version))
          COPY_KEYS: |
            aws/bosh-stemcell-%s-aws-xen-hvm-((stemcell_os))-((stemcell_os_version)).tgz
            google/bosh-stemcell-%s-google-kvm-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
            openstack/bosh-stemcell-%s-openstack-kvm-((stemcell_os))-((stemcell_os_version)).tgz
            warden/bosh-stemcell-%s-warden-boshlite-((stemcell_os))-((stemcell_os_version)).tgz
            vsphere/bosh-stemcell-%s-vsphere-esxi-((stemcell_os))-((stemcell_os_version)).tgz
            vcloud/bosh-stemcell-%s-vcloud-esxi-((stemcell_os))-((stemcell_os_version)).tgz
            azure/bosh-stemcell-%s-azure-hyperv-((stemcell_os))-((stemcell_os_version)).tgz
      - aggregate:
        - put: bosh-linux-stemcell-builder-push
          params:
            repository: bosh-linux-stemcell-builder
            tag: version-tag/tag
            only_tag: true
        - put: stemcells-index
          params:
            repository: stemcells-index
            rebase: true

  # WARDEN
  #

  - name: build-warden-boshlite
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         warden
          HYPERVISOR:   boshlite
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: warden-boshlite
          params:
            file: stemcell/*.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true


  #
  # AWS
  #

  - name: build-aws-xen-hvm
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         aws
          HYPERVISOR:   xen-hvm
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: aws-xen-hvm
          params:
            file: stemcell/*.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true


  #
  # Azure
  #

  - name: build-azure-hyperv
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         azure
          HYPERVISOR:   hyperv
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: azure-hyperv
          params:
            file: stemcell/*.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true


  #
  # Google
  #

  - name: build-google-kvm
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         google
          HYPERVISOR:   kvm
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: google-kvm
          params:
            file: stemcell/*-go_agent.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true


  #
  # OpenStack
  #

  - name: build-openstack-kvm
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         openstack
          HYPERVISOR:   kvm
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: openstack-kvm-raw
          params:
            file: stemcell/*-raw.tgz
        - put: openstack-kvm
          params:
            file: stemcell/*-go_agent.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true


  #
  # vSphere
  #

  - name: build-vsphere-esxi
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         vsphere
          HYPERVISOR:   esxi
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: vsphere-esxi
          params:
            file: stemcell/*.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true

  #
  # vCloud
  #

  - name: build-vcloud-esxi
    plan:
      - aggregate:
          - get: version
            trigger: true
            passed: [build-stemcell]
          - get: bosh-linux-stemcell-builder
            passed: [build-stemcell]
          - get: stemcells-index
      - task: create-stemcell
        file: bosh-linux-stemcell-builder/ci/tasks/build.yml
        privileged: true
        params:
          IAAS:         vcloud
          HYPERVISOR:   esxi
          OS_NAME:      ((stemcell_os))
          OS_VERSION:   ((stemcell_os_version))
      - aggregate:
        - put: vcloud-esxi
          params:
            file: stemcell/*.tgz
      - put: stemcells-index
        params:
          repository: stemcells-index
          rebase: true

  - name: bats
    serial: true
    plan:
    - do:
      - aggregate:
        - get: bosh-release
        - get: cpi-release
        - get: stemcell
          trigger: true
          tags:
          - vsphere-v5.1
          resource: vsphere-esxi
          passed:
            - build-vsphere-esxi
        - get: bosh-cli
        - get: bats
        - get: bosh-deployment
        - get: bosh-linux-stemcell-builder
          passed:
            - build-warden-boshlite
            - build-aws-xen-hvm
            - build-azure-hyperv
            - build-google-kvm
            - build-openstack-kvm
            - build-vsphere-esxi
            - build-vcloud-esxi
        - get: version
          passed:
            - build-warden-boshlite
            - build-aws-xen-hvm
            - build-azure-hyperv
            - build-google-kvm
            - build-openstack-kvm
            - build-vsphere-esxi
            - build-vcloud-esxi

      - {put: environment, params: {acquire: true}}

      - do:
        - <<: *deploy-director

        - <<: *prepare-bats-config
          params:
            STEMCELL_NAME: bosh-vsphere-esxi-((stemcell_os))-((stemcell_os_version))-go_agent

        - <<: *run-bats
        ensure:
          do:
          - <<: *teardown
      ensure:
        do:
        - {put: environment, params: {release: environment}}


resources:
  - name: os-image-tarball
    type: s3
    source:
      bucket: ((osimage_bucket))
      versioned_file: bosh-((stemcell_os))-((stemcell_os_version))-os-image.tgz
      access_key_id: ((osimage_aws_access_key))
      secret_access_key: ((osimage_aws_secret_key))

  - name: bosh-linux-stemcell-builder-push
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-linux-stemcell-builder
      branch: ((release_branch))
      private_key: ((bosh_src_key))

  - name: bosh-linux-stemcell-builder
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-linux-stemcell-builder
      branch: ((release_branch))

  - name: stemcells-index
    type: git
    source:
      uri: git@github.com:bosh-io/stemcells-core-index.git
      branch: master
      private_key: ((boshio_stemcells_index_key))

  - name: version
    type: semver
    source:
      driver: s3
      key: bosh-stemcell/version-((release_branch))
      bucket: ((candidate_stemcell_bucket))
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))
      initial_version: ((initial_version))

  - name: syslog-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/syslog-release

  - name: os-conf-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/os-conf-release

  - name: bosh-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/bosh

  - name: cpi-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bosh-vsphere-cpi-release

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master

  - name: bosh-cli
    type: s3
    source:
      regexp: bosh-cli-([0-9.]+)-linux-amd64
      bucket: bosh-cli-artifacts
      region_name: us-east-1

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: environment
    type: pool
    source:
      pool: vsphere
      uri: git@github.com:pivotal-cf-experimental/bats-concourse-pool.git
      branch: master
      private_key: ((github_deployment_key__bosh-cpi-environments))

  #
  # Stemcells
  #

  #
  # AWS
  #

  - name: aws-xen-hvm
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: aws/bosh-stemcell-(.+)-aws-xen-hvm-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  #
  # Azure
  #

  - name: azure-hyperv
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: azure/bosh-stemcell-(.+)-azure-hyperv-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  #
  # vSphere
  #

  - name: vsphere-esxi
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: vsphere/bosh-stemcell-(.+)-vsphere-esxi-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  #
  # Google
  #

  - name: google-kvm
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: google/bosh-stemcell-(.+)-google-kvm-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  #
  # Openstack
  #

  - name: openstack-kvm
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: openstack/bosh-stemcell-(.+)-openstack-kvm-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  - name: openstack-kvm-raw
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: openstack/bosh-stemcell-(.+)-openstack-kvm-((stemcell_os))-((stemcell_os_version))-go_agent-raw.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  #
  # vCloud
  #

  - name: vcloud-esxi
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: vcloud/bosh-stemcell-(.+)-vcloud-esxi-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))

  #
  # Warden
  #

  - name: warden-boshlite
    type: s3
    source:
      bucket: ((candidate_stemcell_bucket))
      regexp: warden/bosh-stemcell-(.+)-warden-boshlite-((stemcell_os))-((stemcell_os_version))-go_agent.tgz
      access_key_id: ((stemcell_aws_access_key))
      secret_access_key: ((stemcell_aws_secret_key))
